    <Application x:Class="SessionRoss3.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SessionRoss3"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Width" Value="130"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Width" Value="130"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Width" Value="130"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style x:Key="{x:Type Expander}"
       TargetType="{x:Type Expander}">
            <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background"
            Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment"
            Value="Stretch"/>
            <Setter Property="VerticalContentAlignment"
            Value="Stretch"/>
            <Setter Property="BorderBrush"
            Value="Transparent"/>
            <Setter Property="BorderThickness"
            Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite"
                                      DockPanel.Dock="Top"
                                      Margin="1"
                                      MinWidth="0"
                                      MinHeight="0"
                                     
                                      IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Padding="{TemplateBinding Padding}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontStyle="{TemplateBinding FontStyle}"
                                      FontStretch="{TemplateBinding FontStretch}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent"
              SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                   
                                                        <Path x:Name="arrow" Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Stroke="{TemplateBinding Foreground}"
                      StrokeThickness="1.5"
                      SnapsToDevicePixels="false"
                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                                                  
                                                    <ContentPresenter Grid.Column="0"
                              Margin="4,0,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              SnapsToDevicePixels="True"
                              RecognizesAccessKey="True"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked"
                 Value="true">
                                                    <Setter Property="Data"
                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                    TargetName="arrow"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver"
                 Value="true">
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter x:Name="ExpandSite"
                                          DockPanel.Dock="Bottom"
                                          Visibility="Collapsed"
                                          Focusable="false"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                             Value="true">
                                <Setter Property="Visibility"
                                Value="Visible"
                                TargetName="ExpandSite"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                             Value="false">
                                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
